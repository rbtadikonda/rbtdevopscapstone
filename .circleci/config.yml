version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.0.3             #https://github.com/CircleCI-Public/aws-eks-orb/releases/tag/patch-release-v1.0.3
  kubernetes: circleci/kubernetes@1.2.0      

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  linter:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            # Install hadolint
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint    
  
  build-and-push-docker-image:
    machine: true
    working_directory: ~/app
    steps:
      - checkout
      - run:
          name: Build/Push docker image
          command: |
            docker login --username rbtadikonda --password $DOCKER_HUB_PASSWORD
            docker build --tag=rbtcapstone .
            docker tag rbtcapstone rbtadikonda/rbtcapstone
            docker push rbtadikonda/rbtcapstone

  create-eks-cluster:
      executor: aws-eks/python
      parameters:
        eks-cluster-name:
          description: |
            EKS cluster name
          type: string
      steps:
        - checkout
        - aws-eks/install-aws-iam-authenticator
        - run:
            name: install eksctl
            command: |
              if command -v eksctl1 > /dev/null
                then
                  echo "eksctl is already available"
                  exit 0
              fi 
              mkdir -p eksctl_install
              curl -sL "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C eksctl_install
              chmod +x eksctl_install/eksctl
              sudo mv eksctl_install/eksctl /usr/local/bin/
              rm -Rf eksctl_install
        - aws-eks/create-cluster:
            cluster-name: << parameters.eks-cluster-name >>
            zones: us-east-1a,us-east-1b,us-east-1c,us-east-1d,us-east-1f
            node-type: t2.micro
            nodes-max: 2

  deploy-to-eks-cluster:
    executor: aws-eks/python
    parameters:
      eks-cluster-name:
        description: |
          deployment to k8 eks cluster
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.eks-cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: false
          resource-file-path: eks-deployment/deployment-service.yml
          resource-name: deployment/rbtcapstone

  check-cluster:
    executor: aws-eks/python
    parameters:
      eks-cluster-name:
        description: |
          Checking Cluster
        type: string
    steps:
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.eks-cluster-name >>
      - run:
          name: check cluster for services deployemnt and nodes
          command: |
            kubectl get services
            kubectl get deployment
            kubectl get nodes

workflows:
  default:
    jobs:
      - linter
      - build-and-push-docker-image:
          requires:
            - linter
      - create-eks-cluster:
          eks-cluster-name: rbt-devops-capstone
          requires:
            - build-and-push-docker-image
      - deploy-to-eks-cluster:
          eks-cluster-name: rbt-devops-capstone
          requires: 
            - create-eks-cluster
      - aws-eks/update-container-image:
          cluster-name: rbt-devops-capstone
          container-image-updates: rbtcapstone=rbtadikonda/rbtcapstone
          record: true
          resource-name: deployment/rbtcapstone
          requires: 
            - deploy-to-eks-cluster
      - check-cluster:
          eks-cluster-name: rbt-devops-capstone
          requires: 
            - aws-eks/update-container-image